import discord
from discord.ext import commands
import json
import os

# os.chdir("C:\\Users\\Luke\\Desktop\\Python VScode")
os.chdir("C:\\Users\\divya\\Documents\\Desktop\\Python\\discord bot")

Bot_Name = "Bunger Bot"

Bot = commands.Bot(command_prefix="B#")

print("SPACER -----------------------------------------------------")


#  @Bot.event
# async def on_message(message):
#     await message.channel.send("Picked up message", f"Message is '{message.content}'")
#     with open("Data.json", "r",) as f:
#         guilds = json.load(f)
#     guild = message.guild
#     if guilds[str(guild.id)]["Prefix"] != "B#":

#         Bot.command_prefix = guilds[str(guild.id)]["Prefix"]


# Prefix saving?
@Bot.command()
async def prefixcheck(ctx):
    message = ctx.message
    await check_prefix(message.guild, message)

    guilds = await get_guilds()

    guild = message.guild

    prefix = guilds[str(guild.id)]["Prefix"]
    await message.channel.send(f"{prefix} Is the current prefix")


async def check_prefix(guild, message):
    # guilds = get_prefix_data() #<coroutine object get_prefix_data at 0x0000028A86789A40>
    guilds = await get_guilds()
    print(guilds, "Is the guilds")
    print(guilds, "Is the 'guilds' variable ")

    if str(guild.id) in guilds:
        prefix = guilds[str(guild.id)]["Prefix"]
        await message.channel.send(f"{prefix} Is the current prefix")

    else:
        guilds[str(guild.id)] = {}
        guilds[str(guild.id)]["Prefix"] = "B#"  # ERROR HERE

    with open("Data.json", "w",) as f:
        json.dump(guilds, f)


async def get_guilds():
    with open("Data.json", "r",) as f:
        guilds = json.load(f)
    return guilds


# Bot Print Ready
@Bot.event
async def on_ready():
    print("Bot Be The Do Ready")


# Secret amogus command
@Bot.command()
async def amogus(ctx):
    await ctx.send("Red sus.ðŸ˜³ Red suuuus.ðŸ˜³ I said red, sus, hahahahaha.ðŸ˜³ Why arent you laughing?ðŸ˜³ I just made a reference to the popular video game 'Among Us'! ðŸ˜³How can you not laugh at it? ðŸ˜³Emergeny meeting!ðŸ˜³ Guys, this here guy doesnt laugh at my funny Among Us memes! ðŸ˜³Lets beat him to death! Dead body reported! Skip! Skip! Vote blue!ðŸ˜³ Blue was not an impostorðŸ˜³. Among us in a nutshell hahahaha. ðŸ˜³What?! Youre still not laughing your ass off? I made SEVERAL funny references to Among Us and YOU STILL ARENT LAUGHING??!!! Bruh. Ya hear that? Wooooooosh. Whats woooosh? Oh, nothing. Just the sound of a joke flying over your head. Whats that? You think im annoying? Kinda sus, bro. Hahahaha! Anyway, yea, gotta go do tasks. Hahahaha! funny amogus ahha")
    # ChangePrefix


# @Bot.command()
# async def testrefresh(ctx):
#    await ctx.send("new code works")


# Ping command
@Bot.command()
async def ping(ctx):
    await ctx.send(f'Current ping: {round(Bot.latency * 1000)}ms')


# GetUser test command
@Bot.command()
async def getuser(ctx):
    await ctx.send(f'User is {ctx.author}')


# Purge Command
@Bot.command()
async def purge(ctx, amount=0):
    if amount == None or amount == 0:  # and :
        await ctx.send("Amount not recognized, please put a valid number.")
    elif amount != None and amount != 0:
        amount = amount + 1
        await ctx.channel.purge(limit=amount)

# Change Prefix command


@Bot.command(aliases=['newprefix', 'setprefix'])
async def changeprefix(ctx, *, usersPrefix):
    print(ctx, "IS THE CTX")
    Bot.command_prefix = usersPrefix
    # spacer
    with open("Data.json", "r",) as f:
        guilds = json.load(f)
    # spacer
    guild = ctx.guild

    await ctx.send(f"{guild} is the 'guild' value")
    await ctx.send(f"{guild}s is the 'guilds' value")
    await ctx.send(f"{usersPrefix} is the 'usersPrefix' value")

    guilds[str(guild.id)]["Prefix"] = usersPrefix
    await ctx.send(f'Prefix successfully changed \n New prefix is "{usersPrefix}"')


# Work Command
@Bot.command()
async def work(ctx):
    with open("Data.json", "r") as f:
        users = json.load(f)

    if str(ctx.author.id) in users:
        users[str(ctx.author.id)] = {}
        users[str(ctx.author.id)]["wallet"] = users[str
            ctx.author.id)]["wallet"] + 50
    else:
        await startBalance(ctx.author)

    with open("Data.json", "w") as f:
        json.dump(users, f)


async def startBalance(user):
    with open("Data.json", "r") as f:
        users = json.load(f)
    users[str(user.id)]["wallet"] = 0
    json.dump(users, f)


# KEEP THIS SECRET (hes joking tell it to everyone)
Bot.run() #The bot token was here and i deleted it from the code
