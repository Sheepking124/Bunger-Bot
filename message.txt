import discord
import random
from discord.ext import commands
import json
import os


# os.chdir("C:\\Users\\Luke\\Desktop\\Python VScode")
#os.chdir("C:\\Users\\divya\\Documents\\Desktop\\Python\\discord bot")
os.chdir("C:\\Users\\Luke\\Desktop\\Python VScode")


Bot_Name = "Bunger Bot"

async def getprefix(client,message):
    await check_prefix(message.guild,message)
    with open("Data.json", "r",) as f:
        guilds = json.load(f)
    return guilds[str(message.guild.id)]["Prefix"]

print(getprefix)

Bot = commands.Bot(command_prefix= getprefix)

print("SPACER -----------------------------------------------------")


# Prefix saving?
@Bot.command()
async def prefixcheck(ctx):
    message = ctx.message
    await check_prefix(message.guild, message)

    guilds = await get_guilds()

    guild = message.guild

    prefix = guilds[str(guild.id)]["Prefix"]


async def check_prefix(guild, message):
    # guilds = get_prefix_data() #<coroutine object get_prefix_data at 0x0000028A86789A40>
    guilds = await get_guilds()

    if str(guild.id) in guilds:
        prefix = guilds[str(guild.id)]["Prefix"]

    else:
        guilds[str(guild.id)] = {}
        guilds[str(guild.id)]["Prefix"] = "B#" 

    with open("Data.json", "w",) as f:
        json.dump(guilds, f)


async def get_guilds():
    with open("Data.json", "r",) as f:
        guilds = json.load(f)
    return guilds


# Bot Print Ready
@Bot.event
async def on_ready():
    print("Bot Be The Do Ready")


# Secret amogus command
@Bot.command()
async def amogus(ctx):
    await ctx.send("Red sus.ðŸ˜³ Red suuuus.ðŸ˜³ I said red, sus, hahahahaha.ðŸ˜³ Why arent you laughing?ðŸ˜³ I just made a reference to the popular video game 'Among Us'! ðŸ˜³How can you not laugh at it? ðŸ˜³Emergeny meeting!ðŸ˜³ Guys, this here guy doesnt laugh at my funny Among Us memes! ðŸ˜³Lets beat him to death! Dead body reported! Skip! Skip! Vote blue!ðŸ˜³ Blue was not an impostorðŸ˜³. Among us in a nutshell hahahaha. ðŸ˜³What?! Youre still not laughing your ass off? I made SEVERAL funny references to Among Us and YOU STILL ARENT LAUGHING??!!! Bruh. Ya hear that? Wooooooosh. Whats woooosh? Oh, nothing. Just the sound of a joke flying over your head. Whats that? You think im annoying? Kinda sus, bro. Hahahaha! Anyway, yea, gotta go do tasks. Hahahaha! funny amogus ahha")
    # ChangePrefix


# @Bot.command()
# async def testrefresh(ctx):
#    await ctx.send("new code works")


# Ping command
@Bot.command()
async def ping(ctx):
    await ctx.send(f'Current ping: {round(Bot.latency * 1000)}ms')


# GetUser test command
@Bot.command()
async def getuser(ctx):
    await ctx.send(f'User is {ctx.author}')


# Purge Command
@Bot.command()
async def purge(ctx, amount=0):
    if amount == None or amount == 0:  # and :
        await ctx.send("Amount not recognized, please put a valid number.")
    elif amount != None and amount != 0:
        amount = amount + 1
        await ctx.channel.purge(limit=amount)

# Change Prefix command


@Bot.command(aliases=['newprefix', 'setprefix'])
async def changeprefix(ctx, *, usersPrefix):
    print(ctx, "IS THE CTX")
    Bot.command_prefix = usersPrefix
    # spacer
    with open("Data.json", "r",) as f:
        guilds = json.load(f)
    # spacer
    guild = ctx.guild

    await ctx.send(f"{guild} is the 'guild' value")
    await ctx.send(f"{guilds} is the 'guilds' value")
    await ctx.send(f"{usersPrefix} is the 'usersPrefix' value")
    prefixjson = guilds[str(guild.id)]["Prefix"]
    await ctx.send(f"{prefixjson} is the prefix stored in the json file")

    
    guilds[str(guild.id)]["Prefix"] = str(usersPrefix)

    with open("Data.json", "w",) as f:
        json.dump(guilds, f)

    prefixjson = guilds[str(guild.id)]['Prefix']
    await ctx.send(f'Prefix successfully changed \nNew prefix is "{prefixjson}"')


# Work Command
@Bot.command()
async def work(ctx):
    await makeacc(ctx)
    users = await getusers()

    if str(ctx.author.id) in users:
     winamnt = random.randint(50,185)
     users[str(ctx.author.id)]["wallet"] += winamnt

     with open("Data.json", "w") as f:
          json.dump(users, f)

     users = await getusers() 

     new_wallet = users[str(ctx.author.id)]["wallet"] 
     new_bank = users[str(ctx.author.id)]["bank"] 
     winembed = discord.Embed(title=f"{ctx.author.display_name}'s Winnings", color=discord.Color.blurple())
     winembed.set_author(name=ctx.author.display_name, icon_url = ctx.author.avatar_url)
     winembed.add_field(name="Bungers Made", value=f":hamburger:{str(winamnt*1.5)} Bungers Were flipped, and :hamburger:***{winamnt}*** Bungers were kept!", inline=False)
     winembed.add_field(name="Total Bungers", value=f":hamburger:{new_wallet} in wallet\n:hamburger:{new_bank} In bank", inline=False)
     
     await ctx.send(embed=winembed)
#deposit comand
@Bot.command(aliases=['deposit', 'depo'])
async def dep(ctx, num):
    await makeacc(ctx)
    users = await getusers()

    inwallet = users[str(ctx.author.id)]["wallet"]
    inbank = users[str(ctx.author.id)]["bank"]

    if num != 0 and inwallet >= float(num):
       users[str(ctx.author.id)]["wallet"] -= float(num)
       users[str(ctx.author.id)]["bank"] += float(num)
       with open("Data.json", "w") as f:
          json.dump(users, f)

       users = await getusers()
       inwallet = users[str(ctx.author.id)]["wallet"]
       inbank = users[str(ctx.author.id)]["bank"]

       winembed = discord.Embed(title=f"{ctx.author.display_name}'s Balance", color=discord.Color.blurple(), description = f"Succesfully deposited :hamburger:{num} into the bank!")
       winembed.set_author(name=ctx.author.display_name, icon_url = ctx.author.avatar_url)
       winembed.add_field(name="In Wallet", value=f":hamburger:{inwallet}", inline=False)
       winembed.add_field(name="In Bank", value=f":hamburger:{inbank}", inline=False)

       await ctx.send(embed=winembed)
    else:
        await ctx.send("You do not have enough money to do that")

#withdraw comand
@Bot.command(aliases=['wit', 'with'])
async def withdraw(ctx, num):
    await makeacc(ctx)
    users = await getusers()

    inwallet = users[str(ctx.author.id)]["wallet"]
    inbank = users[str(ctx.author.id)]["bank"]

    if num != 0 and inbank >= float(num):
       users[str(ctx.author.id)]["wallet"] += float(num)
       users[str(ctx.author.id)]["bank"] -= float(num)
       with open("Data.json", "w") as f:
          json.dump(users, f)

       users = await getusers()
       inwallet = users[str(ctx.author.id)]["wallet"]
       inbank = users[str(ctx.author.id)]["bank"]

       winembed = discord.Embed(title=f"{ctx.author.display_name}'s Balance", color=discord.Color.blurple(), description = f"Succesfully withdrew :hamburger:{num}!")
       winembed.set_author(name=ctx.author.display_name, icon_url = ctx.author.avatar_url)
       winembed.add_field(name="In Wallet", value=f":hamburger:{inwallet}", inline=False)
       winembed.add_field(name="In Bank", value=f":hamburger:{inbank}", inline=False)

       await ctx.send(embed=winembed)
    else:
        await ctx.send("You do not have enough money to do that")

#checkbal command
@Bot.command()
async def bal(ctx):
    await makeacc(ctx)

    users = await getusers()

    inwallet = users[str(ctx.author.id)]["wallet"]
    inbank = users[str(ctx.author.id)]["bank"]

    winembed = discord.Embed(title=f"{ctx.author.display_name}'s Balance", color=discord.Color.blurple())
    winembed.set_author(name=ctx.author.display_name, icon_url = ctx.author.avatar_url)
    winembed.add_field(name="In Wallet", value=f":hamburger:{inwallet}", inline=False)
    winembed.add_field(name="In Bank", value=f":hamburger:{inbank}", inline=False)

    await ctx.send(embed=winembed)

#fish command
@Bot.command()
async def fish(ctx):
    await makeinv(ctx)
    fishes = ["Trout", "Cod", "Bass", "NightFish"]
    

async def makeinv(ctx):
    with open("InvData.json", "r") as f:
            users = json.load(f)

    if str(ctx.author.id) in users:
        pass

    else:
          users[str(ctx.author.id)] = {}
          users[str(ctx.author.id)]["Inv"] = [] 
          with open("InvData.json", "w") as f:
             json.dump(users, f)

    await ctx.send("Yep you have an inventory now")


async def makeacc(ctx):
    users = await getusers()

    if str(ctx.author.id) in users:
        return False

    else:
        users[str(ctx.author.id)] = {}
        users[str(ctx.author.id)]["wallet"] = 0
        users[str(ctx.author.id)]["bank"] = 0
        with open("Data.json", "w") as f:
            json.dump(users, f)
        return True

async def getusers():
    with open("Data.json", "r") as f:
            users = json.load(f)
    return users


# KEEP THIS SECRET (hes joking tell it to everyone)
Bot.run('')
